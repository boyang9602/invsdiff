package ca.concordia.apr.invsdiff;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.json.JSONObject;

import ca.concordia.apr.invsdiff.comparasion.Comparator;
import ca.concordia.apr.invsdiff.comparasion.Result;

/**
 * Compare similar invariants file generated by daikon, i.e. invariants of slightly different versions
 *
 */
public class App 
{
    public static void main( String[] args ) throws FileNotFoundException, IOException, NoSuchAlgorithmException
    {
    	if (args.length < 2) {
    		System.out.println("Usage: \nca.concordia.apr.invsdiff.App invsfile0 invsfile1 invsfile2 ...");
    		System.exit(1);
    	}
    	List<InvsFile> invsFiles = new LinkedList<InvsFile>();
        for (int j = 0; j < args.length; j++) {
        	if (args[j].startsWith("--")) {
        	} else {
        		invsFiles.add(new InvsFile(args[j]));
        	}
        }
        Set<String> allPpts = new HashSet<String>();
        for (InvsFile invsFile : invsFiles) {
        	allPpts.addAll(invsFile.getPptNamesSet());
        }
        Map<String, Set<Result>> classResultMap = new HashMap<String, Set<Result>>();
        for (String pptName : allPpts) {
        	Map<String, Ppt> tbc = new HashMap<String, Ppt>();
        	for (InvsFile invsFile : invsFiles) {
        		tbc.put(invsFile.getFilename(), invsFile.getPptByName(pptName));
        	}
        	Result result = Comparator.compare(pptName, tbc);
        	Set<Result> resultSet = classResultMap.getOrDefault(result.getClassName(), new HashSet<Result>());
        	resultSet.add(result);
        	classResultMap.put(result.getClassName(), resultSet);
        }

        for (String className : classResultMap.keySet()) {
        	JSONObject tmp = new JSONObject();
        	for (Result result : classResultMap.get(className)) {
        		result.appendToJSON(tmp);
        	}
        }
    }
}
